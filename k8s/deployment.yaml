apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-microservice
  namespace: my-microservice
  labels:
    app: my-microservice
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-microservice
  template:
    metadata:
      labels:
        app: my-microservice
        version: v1
    spec:
      containers:
        - name: my-microservice
          image: ghcr.io/your-username/my-microservice:latest
          ports:
            - containerPort: 3000
              name: http
          envFrom:
            - configMapRef:
                name: my-microservice-config
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: my-microservice-secrets
                  key: database-url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: my-microservice-secrets
                  key: redis-url
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: my-microservice-secrets
                  key: jwt-secret
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      securityContext:
        fsGroup: 1001
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
